

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==4) then vv9());break;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then v24=nil;function v24()local v39,v40,v41,v42=v2(v16,v19,v19 + (7 -(933 -(487 + 442))));v19=v19 + (5 -1);return (v42 * 16777216) + (v41 * (174912 -109376)) + (v40 * (1856 -(1436 + 164))) + v39;end v25=nil;v18=4;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==4) then function v25()local v43=v24();local v44=v24();return (( -2 * v21(v44,32)) + (1374 -(446 + 927))) * (2^(v21(v44,90 -(64 + 5),93 -62) -(3625 -2602))) * ((((v21(v44,859 -(78 + 780),8 + 12) * ((2 + 0)^(13 + 19))) + v43)/((4 -2)^52)) + 1 + (1707 -(16 + 1691)));end v26=nil;function v26(v31)local v45=0;local v46;local v47;while true do if (v45==(1160 -(1148 + 9))) then return v7(v47);end if (v45==(0 -0)) then v46=nil;if  not v31 then local v72=0 -0;while true do if ((545 -((237 -81) + 389))==v72) then v31=v24();if (v31==(1701 -(1115 + 586))) then return "";end break;end end end v45=2 -1;end if ((6 -4)==v45) then v47={};for v68=1 -0, #v46 do v47[v68]=v3(v2(v4(v46,v68,v68)));end v45=2 + (1419 -(169 + 1249));end if (v45==(2 -1)) then v46=v4(v16,v19,(v19 + v31) -(50 -(3 + 1 + 45)));v19=v19 + v31;v45=1303 -(403 + 898);end end end v18=5;end if (v18==2) then function v22()local v48=v2(v16,v19,v19);v19=v19 + 1;return v48;end v23=nil;function v23()local v49=0 + 0;local v50;local v51;while true do if (v49==(1 -0)) then return (v51 * (83 + 173)) + v50;end if ((0 -0)==v49) then v50,v51=v2(v16,v19,v19 + (284 -(48 + 234)));v19=v19 + 1 + 1;v49=(586 -236) -(102 + 247);end end end v18=3;end if (v18==1) then v21=nil;function v21(v32,v33,v34)if v34 then local v64=(v32/((399 -(130 + 78 + 189))^(v33-(3 -2))))%((1 + 1)^(((v34-(1 + 0)) -(v33-(2 -1))) + (1805 -((685 -(35 + 35)) + 1189))));return v64-(v64%(1 -0));else local v65=0 + 0;local v66;while true do if ((0 -0)==v65) then v66=(9 -7)^(v33-(1 + 0));return (((v32%(v66 + v66))>=v66) and (1 -0)) or (272 -(47 + 225));end end end end v22=nil;v18=2;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v35)if (v2(v35,2)==79) then v20=v1(v4(v35,1,1));return "";else local v67=v3(v1(v35,16));if v20 then local v70=v6(v67,v20);v20=nil;return v70;else return v67;end end end);v18=1;end if (7==v18) then function v30(v36,v37,v38)local v52=0;local v53;local v54;local v55;while true do if (0==v52) then v53=v36[1];v54=v36[2];v52=1;end if (v52==1) then v55=v36[3];return function(...)local v73=1;local v74= -1;local v75={...};local v76=v12("#",...) -1;local function v77()local v78=v53;local v79=Const;local v80=v54;local v81=v55;local v82=v28;local v83={};local v84={};local v85={};for v91=0 + 0,v76 do if ((v91>=v81) or ((2382 -(149 + 274))<=1365)) then v83[v91-v81]=v75[v91 + (1 -0)];else v85[v91]=v75[v91 + (1715 -(711 + 1003))];end end local v86=(v76-v81) + (1 -0);local v87;local v88;while true do local v92=456 -(55 + 401);local v93;while true do if (((18092 -13499)>=((1860 -(65 + 136)) + 65)) and (v92==(0 + 0))) then v93=0 -0;while true do if ((v93==(161 -(158 + 3))) or ((1077 -582)<(683 -385))) then v87=v78[v73];v88=v87[1 + 0];v93=1 -0;end if ((((90 -49) + 31)<(293 + 1101)) and (v93==(908 -(655 + 252)))) then if (((6292 -(1400 + (2508 -(1687 + 236))))>(1202 + 2117)) and (v88<=(877 -(347 + 510)))) then if ((v88<=(9 + 0)) or ((4721 -(556 + 1056))<=(3697 -(186 + 1129)))) then if (((46 + 3455 + 680)<=(14105 -9176)) and (v88<=(2 + 2))) then if ((v88<=(2 -1)) or ((6905 -3711)<(349 + 348))) then if (((1642 -(501 + 729))>408) and (v88>((837 + 68) -(494 + 411)))) then v85[v87[2 + 0]]= #v85[v87[167 -(109 + 55)]];else v85[v87[694 -(287 + 405)]]=v85[v87[1 + 2 + 0]]%v87[1 + 3];end elseif ((v88<=(447 -(52 + 393))) or ((1978 + 941)>(9497 -5651))) then local v123=0 -0;local v124;local v125;local v126;local v127;local v128;local v129;while true do if ((v123==(1 + 0 + 0)) or ((828 -(289 + 152))>4319)) then v126=nil;v127=nil;v123=431 -(302 + 127);end if (((853 + 1898)>(2430 -(259 + 32))) and (v123==(0 + 0))) then v124=731 -(79 + 652);v125=nil;v123=1 + 0 + 0;end if (((2803 -(158 + 87))>=(40 + 140)) and (v123==(2 + 1))) then while true do if ((v124==(0 + (0 -0))) or ((4948 -2416)>(3301 + (2522 -(1107 + 251))))) then v125=0 + (1146 -(708 + 438));v126=nil;v124=1 + 0;end if ((v124==(1 + 0)) or ((392 -111)==(595 + 107 + 517))) then v127=nil;v128=nil;v124=1 + 1;end if ((v124==(1391 -(703 + 686))) or ((907 + 142)>=(2409 -(559 + 172)))) then v129=nil;while true do if ((v125==(0 + 0 + 0)) or (3259>(7808 -3121))) then local v246=1291 -(932 + 359);local v247;while true do if ((v246==(0 -0)) or ((203 + 4165)<(332 + 1642))) then v247=0 -0;while true do if ((v247==(1 + 0)) or ((4237 -(544 + 712))<(2231 -(180 + 288)))) then v125=1 -0;break;end if ((v247==(0 -0)) or ((14202 -11150)<=(4267 -2194))) then v126=v87[(1231 -(807 + 423)) + 1];v127,v128=v82(v85[v126](v13(v85,v126 + (4 -3),v87[1 + 2])));v247=(65 -(16 + 47)) -1;end end break;end end end if ((2160<=(2090 + 2701)) and (v125==(1400 -(983 + 416)))) then local v248=0 -0;local v249;while true do if (((11291 -8864)<=(1807 + 2683)) and (v248==((0 -0) + 0 + 0))) then v249=1387 -(939 + 448);while true do if ((v249==(683 -(436 + 246))) or ((10412 -6311)<=(4713 -(28 + 966)))) then v125=5 -3;break;end if (((509 + 605)==(1886 -(119 + 653))) and (v249==(0 -0))) then local v297=0 -0;while true do if (((12444 -(33284 -24966))<=(14983 -10322)) and ((1740 -(529 + 1211))==v297)) then v74=(v128 + v126) -(1 -0);v129=0 -(0 + 0);v297=1883 -(660 + 1222);end if ((v297==(1709 -(1298 + 410))) or (((14658 -9659) -(139 + 1589))>((247 + 7200) -3036))) then v249=461 -(378 + 82);break;end end end end break;end end end if ((v125==((1242 -(796 + 438)) -6)) or ((1690 -548)>(4626 -2385))) then for v271=v126,v74 do local v272=941 -((890 -611) + 662);local v273;while true do if ((v272==(0 + 0)) or ((2026 + 1671)==(14994 -10367))) then v273=0 -0;while true do if ((v273==(0 -0)) or ((15208 -11494)<=(3354 -1492))) then v129=v129 + (195 -(120 + 63 + 11));v85[v271]=v127[v129];break;end end break;end end end break;end end break;end end break;end if (((9369 -(5022 -(541 + 78)))>(16609 -12894)) and (v123==(520 -(486 + (685 -(268 + 385)))))) then v128=nil;v129=nil;v123=1 + 2;end end elseif (((4516 -((106 -(27 + 68)) + 53))>(1758 -(255 + 560))) and (v88==((7 -5) + 1))) then v85[v87[561 -(445 + 114)]]=v85[v87[1429 -(877 + 549)]][v85[v87[2 + 2]]];else v85[v87[3 -1]]=v87[1 + 2] + v85[v87[6 -2]];end elseif ((v88<=(1553 -(1295 + 252))) or ((1298 + 1085)==(4527 -2924))) then if (((3918 -(400 + 563))>(1616 + (1395 -991))) and (v88>(1919 -(1415 + 499)))) then v85[v87[(14 -9) -3]]=v85[v87[2 + 1]] -v87[1738 -(1652 + 82)];elseif ((4539>=(2443 -(107 + 22 + 1610))) and (v87[2]==v85[v87[4]])) then v73=v73 + 1 + 0;else v73=v87[959 -(183 + 773)];end elseif ((v88<=(1448 -(406 + (3444 -2409)))) or ((6369 -3497)>(7710 -4674))) then local v131=1215 -(236 + 979);local v132;local v133;local v134;while true do if ((3556>(1279 + 1065)) and (v131==(550 -(106 + 266 + 177)))) then v134=nil;while true do if (((2386 + 600)>=(2300 -(196 + 321))) and (v132==(0 -0))) then local v230=0 + 0;local v231;while true do if (((4841 -(24 + 100))>=(1731 -(608 + 338))) and (v230==(0 -(0 + 0)))) then v231=0 + 0;while true do if (((5039 -3249)<(14242 -9249)) and (v231==(0 -(0 -0)))) then v133=v87[2 + 0];v134=v85[v87[13 -10]];v231=2 -1;end if (((4007 -(310 + 243))>(1505 -(96 + 474))) and (v231==(1 + 0))) then v132=1336 -(945 + 390);break;end end break;end end end if (((9825 -(2226 + 3418))<=(2469 + 14 + 2089)) and (v132==(1 -0))) then v85[v133 + 1 + (0 -0)]=v134;v85[v133]=v134[v87[15 -11]];break;end end break;end if (((2140 -(850 + 559))>=((699 + 292) -(94 + 289))) and (v131==(0 -0))) then local v217=(1859 -988) -(609 + 262);while true do if (((1845 + 543)<(12803 -8228)) and (v217==(1 + 0))) then v131=1524 -(94 + 1429);break;end if (((540 + 3222)==(4503 -(216 + 525))) and (v217==(498 -(85 + 413)))) then v132=153 -(131 + 22);v133=nil;v217=(2570 -(1191 + 434)) -(477 + 467);end end end end elseif ((v88==(554 -(29 + 517))) or (((3481 -2259) -740)>(524 + 989))) then v85[v87[6 -4]][v87[3 + 0]]=v85[v87[12 -(1429 -(411 + 1010))]];else v85[v87[1 + 0 + 1]]=v85[v87[10 -7]][v87[640 -(122 + 514)]];end elseif (((1114 + (3309 -(661 + 962)))>=(776 + 188)) and (v88<=(256 -(7 + 235)))) then if (((2224 -(838 + 1085))<=(3830 -(295 + 1375))) and (v88<=(5 + 6))) then if ((v88>(19 -9)) or ((3837 -(173 + 229))>=(5971 -(836 + 513)))) then if ((((1172 + 645) -(418 + 278))>=((4761 -3580) -526)) and (v85[v87[341 -(210 + 129)]]==v85[v87[14 -10]])) then v73=v73 + (1498 -(730 + 767));else v73=v87[1 + 2];end else v85[v87[1826 -(1282 + 542)]]=v85[v87[12 -(5 + 4)]]%v85[v87[10 -6]];end elseif ((v88<=12) or ((1738 -(1091 + 36))>(364 + 3536))) then v85[v87[5 -3]]={};elseif ((v88==(541 -(272 + (1324 -(296 + 772))))) or ((863 -(291 + 198))>=(3329 + 855))) then local v168=1605 -(1592 + 13);local v169;local v170;while true do if (((6767 -(5604 -(1311 + 46)))==(3505 -985)) and (v168==(4 -3))) then while true do if ((v169==(0 -0)) or ((1228 + 555)>(4497 -2414))) then v170=v87[7 -5];v85[v170]=v85[v170](v13(v85,v170 + (2 -1),v87[(101 + 1783) -(1692 + 189)]));break;end end break;end if ((v168==(0 -0)) or ((3757 -1663)<=(347 + 320))) then local v224=1169 -(170 + 999);while true do if (((12064 -9100)>=(3487 -(148 + 694))) and (v224==(3 -2))) then v168=1796 -(877 + 918);break;end if (((864 -(510 + 122))<(161 + 481)) and (v224==(1626 -(1196 + 430)))) then v169=870 -(565 + 305);v170=nil;v224=1 + 0 + 0;end end end end else local v171=(311 -(218 + 93)) + (0 -0);local v172;local v173;local v174;local v175;local v176;while true do if (((245 + 2272)>=(2975 -(63 + 768))) and (v171==(1678 -(323 + 1354)))) then local v225=0 -0;while true do if (((927 -(913 + 13))==v225) or ((5220 -2672)==(1170 + 569))) then v171=2 + 0;break;end if (((2438 -534)<=(9 + 4294)) and (v225==(0 -0))) then v174=nil;v175=nil;v225=2 -1;end end end if (((1502 -844)==658) and (v171==(0 + 0))) then v172=(1178 -(592 + 586)) -0;v173=nil;v171=1 + 0;end if ((v171==(2 + 0)) or ((1048 -(115 + 824))>(4065 -(145 + 1741)))) then v176=nil;while true do if (((2 -1)==v172) or ((4035 -2739)<(2181 -(4 + 989)))) then local v238=0 + 0;local v239;while true do if ((v238==(0 -0)) or (((523 -(60 + 64)) -(21 + 268))>(1625 -799))) then v239=0;while true do if ((v239==(872 -((1726 -902) + 47))) or ((7695 -4551)<((6683 -4565) -1275))) then v172=4 -2;break;end if ((((0 + 0) -0)==v239) or ((3575 + 163)<=(2211 -798))) then v74=(v175 + v173) -(498 -(192 + 265 + 40));v176=0 + 0;v239=1278 -(725 + 552);end end break;end end end if (((2223 + (2227 -(99 + 213)))==(7831 -3693)) and ((0 -(258 -(152 + 106)))==v172)) then local v240=(1849 -(845 + 1004)) + 0;while true do if (((3894 -2452)<=((10938 -6458) -(680 + (1838 -655)))) and (v240==(0 -(0 -0)))) then local v282=0 -0;while true do if ((v282==(0 -0)) or ((242 + 1370)==(11054 -6591))) then v173=v87[1176 -(1028 + 146)];v174,v175=v82(v85[v173](v13(v85,v173 + (1 -0),v74)));v282=1 + 0 + 0;end if ((v282==((517 + 293) -(28 + 781))) or ((1279 + 273)>=(1553 + 868))) then v240=1 + 0;break;end end end if ((((21163 -(289 + 271)) -15725)>(3815 -(103 + 1150))) and (v240==(1 -0))) then v172=1;break;end end end if (((3944 + 228)>(3021 -(540 + 583))) and (v172==(2 -0))) then for v250=v173,v74 do local v251=0 -0;local v252;local v253;while true do if (((4708 -(161 + 190))>(889 + 161)) and (v251==1)) then while true do if ((((523 -(324 + 199)) -0)==v252) or ((83 + 1749)>(3386 -(1100 + (317 -(111 + 20)))))) then v253=0 + 0;while true do if (((1658 -562)<=(327 + 806)) and (v253==(0 -0))) then v176=v176 + 1 + 0;v85[v250]=v174[v176];break;end end break;end end break;end if ((0==v251) or ((137 + 593)>((925 -538) + 376))) then v252=(34 + 34) -((796 -(718 + 55)) + 45);v253=nil;v251=1 + 0;end end end break;end end break;end end end elseif ((v88<=17) or ((293 + 166 + 9)==(465 + 93))) then if ((v88<=(31 -16)) or ((660 + (3187 -(41 + 116)))<(536 + 1218))) then v85[v87[6 -4]]=v38[v87[1 + 2]];elseif (((1517 -932)<=(513 + 2022)) and (v88>(1936 -(1343 + 577)))) then v73=v87[1000 -(937 + 60)];else local v177=0 + 0;local v178;local v179;local v180;local v181;while true do if (((5393 -2147)==(13067 -9821)) and (v177==(451 -(161 + 100 + 189)))) then v180=nil;v181=nil;v177=1801 -(1557 + 242);end if ((v177==0) or ((1401 + 1212)<=(1205 -(697 + 446)))) then v178=(15 + 594) -(112 + (1574 -1077));v179=nil;v177=1 + 0;end if (((18126 -14352)>(9426 -7459)) and (((3 -2) + 1)==v177)) then while true do if ((v178==(1 -0)) or ((5360 -2043)<(229 -77))) then v181=nil;while true do if ((v179==(0 -0)) or ((5375 -(67 + 440 + 622))==(2130 -1299))) then local v283=0 -(0 + 0);local v284;while true do if (((1075 -627)==(31 + (896 -(51 + 428)))) and ((0 -(0 + 0))==v283)) then v284=(119 -(102 + 17)) -0;while true do if (((3034 + 973)<(4900 -(103 + 337))) and (v284==(216 -(135 + 80)))) then v179=1 + 0;break;end if (((6691 -4454)<=(12691 -8097)) and (v284==((1796 -(279 + 1517)) -0))) then local v308=(1906 -(271 + 353)) -(812 + (655 -185));while true do if ((v308==((100 -(6 + 94)) + 0)) or ((2337 + 887)==(2803 + 437))) then v180=v87[1 + 1 + 0];v181={};v308=822 -(104 + 717);end if (((241 -66)<(3419 + 193)) and (v308==(1 + 0))) then v284=(2363 -1686) -(488 + 188);break;end end end end break;end end end if (((2009 -(1399 + 148))==(672 -(138 + 72))) and (((446 -(4 + 441)) + 0)==v179)) then for v289=3 -2, #v84 do local v290=0 + 0;local v291;local v292;while true do if ((v290==(1514 -(457 + 1056))) or ((6475 -(876 + 1100))<854)) then while true do if (((8098 -5349)>=(2453 -(289 + 1195))) and (v291==(0 + 0))) then v292=v84[v289];for v315=1191 -(249 + 942), #v292 do local v316=(0 -0) + 0;local v317;local v318;local v319;local v320;while true do if ((((4521 -(221 + 372)) + 450)>=(49 + 219)) and ((0 -0)==v316)) then v317=1394 -(1390 + 4);v318=nil;v316=(5 -3) -(1 + 0);end if ((v316==(3 -2)) or ((4676 -(608 + 380))>=(974 + 2936))) then local v334=(236 -(219 + 17)) -0;while true do if (((1825 -(289 + 79))>=(1657 -(617 + 794))) and (v334==(1 + (556 -(63 + 493))))) then v316=1 + 1;break;end if ((v334==(0 + 0)) or ((465 + 4017)==((6496 -(416 + 563)) -3079))) then v319=nil;v320=nil;v334=1;end end end if ((v316==(143 -(77 + 60 + 4))) or ((2226 -1186)==(4555 -1234))) then while true do if (((430 -(71 + 52))<=((11447 -(1237 + 699)) -6448)) and (v317==(1 + 0))) then v320=v318[1334 -(248 + 1084)];if (((2648 -(807 + 284))==(3100 -(1096 + 447))) and (v319==v85) and (v320>=v180)) then local v342=0 -0;while true do if (((3151 -1692)==(212 + 1247)) and ((0 -0)==v342)) then v181[v320]=v319[v320];v318[857 -(836 + 13 + 7)]=v181;break;end end end break;end if (((376 + 103)<(3429 -(1071 + 579))) and (v317==(0 + 0))) then local v339=354 -(141 + 213);local v340;while true do if ((v339==(0 -0)) or ((3014 -771)==(11307 -8443))) then v340=0 + 0 + 0;while true do if (((5870 -(490 + 850))>=(5198 -1604)) and (v340==(1 -0))) then v317=2 -1;break;end if (((6514 -2647)==(4680 -(636 + 177))) and (v340==((2502 -938) -(1306 + 258)))) then v318=v292[v315];v319=v318[455 -(208 + 246)];v340=1575 -(509 + 1065);end end break;end end end end break;end end end break;end end break;end if ((v290==(1173 -(148 + 1025))) or ((7055 -4091)>(6086 -(1741 + 1020)))) then v291=135 -(74 + 61);v292=nil;v290=1 -0;end end end break;end end break;end if (((1007 -747)<(1257 -(299 + 101))) and (v178==(0 + 0))) then v179=0 + (732 -(270 + 462));v180=nil;v178=3 -2;end end break;end end end elseif ((v88<=((1591 -(1231 + 330)) -12)) or ((65 -34)==(16588 -11939))) then local v138=173 -(47 + 126);local v139;local v140;local v141;local v142;local v143;local v144;while true do if ((v138==(2 -1)) or ((3856 -(1513 + 126))>(4240 -(503 + 294)))) then v141=nil;v142=nil;v138=557 -(357 + 198);end if (((7751 -3775)>(612 -225)) and (v138==(1 + 1))) then v143=nil;v144=nil;v138=2 + 1;end if ((v138==(0 + 0)) or ((6062 -4001)>=(3091 + 6 + 655))) then v139=0 -(0 + 0);v140=nil;v138=(780 -(96 + 43)) -(249 + 331 + 60);end if ((v138==(3 -0)) or (((920 -(185 + 436)) + 1392)>=(5543 -(1544 + 273)))) then while true do if ((v139==(5 -3)) or ((1611 + (2024 -(759 + 112)))>(4866 -(620 + 73)))) then v144=nil;while true do if (((2682 + 391)>(1032 -(279 + 14))) and (v140==(2 + (0 -0)))) then for v274=v141,v74 do local v275=0 -0;local v276;while true do if (((5789 -(1297 + 188))>(11851 -7578)) and (v275==(0 + (427 -(87 + 340))))) then v276=0 + 0;while true do if ((v276==(215 -(66 + 149))) or ((67 -21)>(4726 -(965 + 79)))) then v144=v144 + 1 + 0;v85[v274]=v142[v144];break;end end break;end end end break;end if ((v140==(0 -0)) or ((2534 + 2167)<((19851 -(189 + 381)) -14635))) then local v254=1178 -(1078 + 100);local v255;while true do if ((((1210 + 1805) -(139 + 410))>=(1242 + 316)) and (v254==(0 + 0))) then v255=0 + 0;while true do if ((((1343 + 4564) -(1525 + 474))>(1464 -(836 + 190))) and (v255==(203 -(73 + 130)))) then local v298=(196 + 419) -(403 + 212);while true do if (((1 + 0)==v298) or ((11054 -7208)<(1519 -1010))) then v255=4 -3;break;end if (((1920 -(52 + 11))<=(3009 -(267 + 2 + 23))) and (v298==(0 + 0))) then v141=v87[2 -0];v142,v143=v82(v85[v141](v85[v141 + (72 -(31 + 40))]));v298=1308 -(601 + 706);end end end if ((v255==1) or ((4735 -3169)>(10333 -6746))) then v140=2 -1;break;end end break;end end end if ((1364<(3072 + 909)) and (v140==(1 + 0))) then local v256=0 -0;local v257;while true do if (((4066 -(71 + 181))>=(3050 -((1088 -(119 + 437)) + 1189))) and (v256==(0 -0))) then v257=0 -0;while true do if ((v257==(0 + 0)) or ((2239 -1250)>=(3049 + 378))) then v74=(v143 + v141) -(1 + 0);v144=1197 -(337 + 860);v257=1 + 0;end if ((((1268 + 12420) -8761)>(1999 -(1063 + 677))) and (v257==(1 -0))) then v140=6 -4;break;end end break;end end end end break;end if (((0 -0)==v139) or ((3348 -(16 + 9 + 6))==(182 + 2454))) then v140=0 + 0;v141=nil;v139=547 -(167 + 379);end if ((v139==(1739 -(850 + 888))) or ((4805 -(114 + 50))==(6523 -2708))) then v142=nil;v143=nil;v139=(862 -(484 + 370)) -6;end end break;end end elseif (((5509 -(199 + 1714))>(171 + 323)) and (v88==(12 + 7))) then local v182=0 -0;local v183;while true do if (((0 -0)==v182) or ((258 + 13 + 135)>=(1117 -(13 + 70)))) then v183=v87[1331 -(38 + 1291)];v85[v183](v13(v85,v183 + 1 + (511 -(204 + 307)),v74));break;end end else do return;end end elseif (((294 + 67)==(1133 -772)) and (v88<=(52 -21))) then if ((v88<=(2 + 23)) or ((9544 -5474)<(37 + 153))) then if ((v88<=(8 + 14)) or ((3821 -(151 + 57))==(5806 -3218))) then if ((v88==(349 -(44 + 284))) or ((473 + 4172)==(4188 -(933 + 472)))) then v85[v87[5 -3]]();elseif ((v85[v87[2 -0]]~=v87[6 -2]) or ((2022 + 562)<(310 + 506))) then v73=v73 + (1 -0);else v73=v87[3 + (876 -(639 + 237))];end elseif ((v88<=(81 -58)) or ((6044 -4366)<((3569 + 61) -2510))) then for v162=v87[7 -5],v87[7 -4] do v85[v162]=nil;end elseif ((v88==(11 + 13)) or ((1446 + 303 + 740)>(3200 -(77 + 12 + 58)))) then local v184=0 + 0;local v185;local v186;local v187;local v188;local v189;while true do if (((360 + 322)<=(5082 -(469 + 269))) and (v184==(230 -(213 + 16)))) then v187=nil;v188=nil;v184=3 -1;end if (((0 + 0)==v184) or ((3105 + 419)<2921)) then v185=1036 -(215 + 821);v186=nil;v184=1 + 0 + 0;end if (((4860 -1405)>(418 + (2412 -1164))) and (v184==(3 -(1 + 0)))) then v189=nil;while true do if ((v185==(1119 -(895 + 222))) or ((7755 -3604)<=(1643 -(709 + 58)))) then while true do if (((942 + 1528)==(3366 -(471 + 425))) and (v186==(1091 -((1017 -(158 + 98)) + 330)))) then local v285=(96 + 38) -(51 + 83);while true do if ((v285==(1497 -(599 + 897))) or ((3309 -(162 + 1018))==(647 + 88))) then v186=3 -2;break;end if (((1103 -(62 + 659))<=(4112 -(193 + 1180))) and (v285==((1110 -(951 + 159)) + (797 -(560 + 237))))) then v187=v87[1 + 1];v188=v85[v187];v285=99 -(5 + 93);end end end if (((5719 -(262 + 1047 + 586))>=(2254 -(930 + 24))) and (v186==(1 + 0))) then v189=v85[v187 + (367 -(13 + 273 + 79))];if ((3884==(4112 -(31 + 197))) and (v189>(0 -0))) then if (((88 + 15)<(2390 -(1188 + 794))) and (v188>v85[v187 + 1 + (0 -0)])) then v73=v87[1816 -(15 + 1798)];else v85[v187 + (9 -6)]=v188;end elseif ((v188<v85[v187 + (1854 -(361 + 1492)) + 0]) or ((6080 -(192 + 901))==(5906 -1775))) then v73=v87[4 -1];else v85[v187 + (416 -(213 + 200))]=v188;end break;end end break;end if ((((3202 + 6078) -(17666 -13040))==(6548 -(559 + 1335))) and (v185==(700 -((1188 -(358 + 685)) + 554)))) then local v241=1634 -(342 + 1292);while true do if ((v241==((10 -7) -2)) or ((7819 -(5100 -(29 + 6)))==(10800 -6757))) then v185=1006 -(82 + 922);break;end if ((v241==(1794 -(605 + 1189))) or ((4942 -(1362 + 180))>(8217 -4805))) then v188=nil;v189=nil;v241=2 -(3 -2);end end end if ((v185==(0 + 0)) or (((2297 -(25 + 5)) -((917 -325) + 490))==(1446 + 407))) then local v242=0;while true do if ((((2922 + 1097) -(862 + 882))==(1785 + 466 + 24)) and ((0 -0)==v242)) then v186=(0 + 0) -0;v187=nil;v242=1 + 0;end if (((6369 -2835)==(1543 + (3372 -(1245 + 136)))) and ((1 -0)==v242)) then v185=1349 -(776 + 572);break;end end end end break;end end else local v190=0 + 0;local v191;local v192;while true do if (((1981 + 1309)>1830) and (v190==(0 -0))) then v191=369 -(47 + 322);v192=nil;v190=588 -(209 + 378);end if (((3963 -(518 + 225))>=(5248 -2153)) and ((1 + (0 -0))==v190)) then while true do if (((1757 -(352 + 520 + 885))==v191) or ((545 -227)==(1960 + 1251))) then v192=v87[(2337 -(717 + 362)) -(688 + 568)];v85[v192]=v85[v192](v85[v192 + ((3 + 0) -2)]);break;end end break;end end end elseif (((539 -321)<=(996 -685)) and (v88<=(16 + 12))) then if (((1905 + 476)>=2347) and (v88<=((581 + 682) -(721 + 516)))) then v85[v87[(1376 -(234 + 1138)) -2]]=v87[98 -(25 + 70)];elseif ((v88==(129 -(42 + 60))) or ((10894 -7588)==(1468 -(335 + 729)))) then v85[v87[5 -(2 + 1)]][v87[9 -6]]=v87[14 -10];else local v194=(1497 -(808 + 689)) -0;local v195;local v196;local v197;while true do if (((2032 + 2063)>=(2150 -(407 + 397))) and ((634 -(260 + 373))==v194)) then v197=nil;while true do if ((v195==(0 -0)) or ((11426 -7122)==(3372 -(168 + 400)))) then v196=964 -(892 + 72);v197=nil;v195=1195 -(160 + 1034);end if (((1050 + 1863)>((202 -101) + 17)) and (v195==(3 -2))) then while true do if (((2852 -(55 + 22))>=(2464 -1063)) and (v196==(0 -0))) then v197=v87[248 -((38 -12) + 220)];do return v13(v85,v197,v74);end break;end end break;end end break;end if (((4709 -1295)==(8970 -5556)) and (v194==(985 -(536 + 449)))) then v195=0 -0;v196=nil;v194=527 -(367 + 159);end end end elseif ((v88<=(114 -(60 + 25))) or ((13 + 37)>(214 + 1348))) then local v146=(1704 -743) -(830 + 131);local v147;local v148;local v149;local v150;local v151;while true do if (((5833 -(451 + 437))>=(3790 -(50 + 383))) and (v146==(1 + 0))) then v149=nil;v150=nil;v146=4 -(2 + 0);end if (((1123 + 2405)<=(725 + 4256)) and ((686 -(666 + 18))==v146)) then v151=nil;while true do if (((3877 -(125 + 746))<(7427 -3804)) and (v147==(1345 -(606 + 738)))) then local v234=0 -0;while true do if (((1342 + 100)<(6384 -(994 + 776))) and (v234==(4 -3))) then v147=393 -(341 + 50);break;end if ((v234==(1305 -(265 + 1040))) or ((2762 + 1677)<((5128 -(426 + 280)) -(433 + 152)))) then v150=nil;v151=nil;v234=1 -0;end end end if (((1289 + 531 + 2649)>=(4199 -(714 + 639))) and ((5 -3)==v147)) then while true do if ((v148==(247 -(167 + 78))) or ((6854 -4619)>(16038 -11146))) then for v277=3 -2,v87[1601 -(1212 + 385)] do local v278=1243 -(301 + 942);local v279;local v280;while true do if ((v278==(1086 -(444 + 642))) or (4753<=(110 + 204))) then v279=1459 -(1064 + 395);v280=nil;v278=1 + 0;end if (((1 -(0 + 0))==v278) or (((3551 -(77 + 38)) -(3443 -(366 + 811)))>(5198 -1259))) then while true do if (((299 + 341)==(2033 -1393)) and (v279==(0 + 0))) then local v305=0 + 0;while true do if ((v305==(0 + 0)) or ((2121 -(131 + 46))<=(898 + 115))) then v73=v73 + 1 + 0;v280=v78[v73];v305=2 -1;end if ((v305==(737 -((1239 -(844 + 214)) + 555))) or ((1856 + 1882)>=(11340 -(7961 -(281 + 154))))) then v279=1 -0;break;end end end if (((6094 -(857 + 288))>=(9703 -5446)) and (v279==(99 -(42 + 56)))) then if ((v280[1 -0]==((938 -(310 + 512)) -77)) or ((4137 -(521 + 46))<(4983 -(50 + 1133 + 357)))) then v151[v277-(2 -(622 -(79 + 542)))]={v85,v280[10 -7]};else v151[v277-(1 + 0)]={v37,v280[11 -8]};end v84[ #v84 + (1341 -(597 + 743))]=v151;break;end end break;end end end v85[v87[2 -0]]=v30(v149,v150,v38);break;end if ((v148==(578 -(155 + (1243 -(13 + 808))))) or (4162<(2294 + 321))) then local v259=(0 -0) + 0;local v260;while true do if (((4751 -3145)>(908 -341)) and (v259==(1694 -((2156 -(1432 + 481)) + 1352 + 99)))) then v260=0 -0;while true do if ((v260==(0 -0)) or (4607==(897 + 2008))) then local v301=0 + 0;while true do if ((v301==(0 + 0)) or ((4304 -(830 + 7))>=(12610 -8775))) then v151={};v150=v10({},{__index=function(v321,v322)local v326=0 -0;local v327;local v328;while true do if (((6635 -(1144 + 635))>(328 + 248)) and (v326==(0 + 0))) then local v335=0 + 0;while true do if ((v335==((0 -0) -0)) or ((3915 -1201)<=(964 + 342))) then v327=588 -(113 + 475);v328=nil;v335=2 -1;end if (((1 + (1344 -(1145 + 199)))==v335) or ((375 + 3750)==(1847 -1111))) then v326=1834 -(305 + 1528);break;end end end if (((2075 -(150 + 406))==(3010 -(580 + 911))) and (v326==(493 -(40 + 452)))) then while true do if (((3163 + 192)<=(4687 -(4 + 94))) and (v327==(0 + 0))) then local v341=680 -(595 + 85);while true do if ((v341==(0 -0)) or ((547 + 2272)<=((8778 -4641) -3058))) then local v343=794 -(301 + 493);while true do if ((v343==((0 + 0) -0)) or ((5265 -(323 + 1304))>=(689 + 3403))) then v328=v151[v322];return v328[1 + 0 + 0][v328[521 -((606 -304) + 205 + 12)]];end end end end end end break;end end end,__newindex=function(v323,v324,v325)local v329=0 + 0 + 0;local v330;while true do if (((474 + 580)>((3083 -(1368 + 393)) -824)) and (v329==(433 -((512 -(154 + 17)) + 92)))) then v330=v151[v324];v330[1][v330[2]]=v325;break;end end end});v301=(1533 + 350) -(765 + 1117);end if ((v301==(1 + 0)) or (((6099 -(978 + 82)) -(277 + 1201))==(723 -390))) then v260=1 + 0;break;end end end if (((560 + 2941)<(6124 -(483 + 819))) and (v260==(1 + 0))) then v148=1333 -(652 + 679);break;end end break;end end end if (((4919 -1825)<(2158 + 2773)) and (v148==(1269 -(645 + (1313 -689))))) then local v261=1179 -((1030 -(260 + 572)) + 981);local v262;while true do if (((1582 -(810 + 343))<=(3773 + 1047)) and (v261==(0 -0))) then v262=0 + 0;while true do if (((0 + 0)==v262) or (1032<=(79 + 16))) then local v302=0 + 0 + 0;while true do if ((v302==((881 -(200 + 680)) -0)) or ((983 + 3949)==(1728 + 1413))) then v262=1 -0;break;end if (((66 -((40 -21) + 47))==v302) or ((121 + 221)<=(898 -((1924 -(1464 + 156)) + 350)))) then v149=v80[v87[5 -2]];v150=nil;v302=1 + 0;end end end if (((1984 + 41)==(3633 -(526 + 126 + 956))) and (((1993 -(1832 + 157)) -3)==v262)) then v148=73 -((274 -206) + 4);break;end end break;end end end end break;end if (((0 + 0)==v147) or ((5464 -(1599 + 2213))>=(1274 + 426))) then local v235=(0 + 0) -0;while true do if ((v235==(433 -(24 + 408))) or ((10995 -(7958 -(183 + 54)))>=(10238 -5587))) then v147=1 -(0 -0);break;end if (((0 + 0 + 0)==v235) or ((621 + 1896)>=(3576 + 78))) then v148=0 -0;v149=nil;v235=118 -(71 + 46);end end end end break;end if (((1981 -(200 + 1781))==v146) or ((200 + 3029)<=(2851 -1417))) then v147=0 + 0;v148=nil;v146=1 + 0;end end elseif ((v88>(67 -37)) or (((3785 + 743) -1385)<(274 + 309))) then local v198=134 -(119 + 15);local v199;local v200;while true do if ((v198==(2 -1)) or ((6154 -3741)==((2079 -(953 + 915)) + 8))) then while true do if (((17576 -13083)==(1888 + 2605)) and (v199==(1535 -(1153 + 382)))) then v200=v87[374 -(40 + 332)];do return v85[v200](v13(v85,v200 + 1 + 0,v87[868 -(469 + 396)]));end break;end end break;end if ((v198==(0 -0)) or ((9940 -6657)==(929 -(923 -463)))) then v199=0 + 0 + 0;v200=nil;v198=1 + 0;end end else local v201=0 + (91 -(48 + 43));local v202;local v203;while true do if ((1302<=(1125 + 279)) and (v201==(1429 -(188 + 1241)))) then v202=1286 -(841 + 445);v203=nil;v201=4 -3;end if ((v201==((2 + 1) -2)) or ((352 + 62 + 2322)<((1880 + 1852) -1702))) then while true do if ((v202==((0 + 0) -0)) or (((4921 -3234) + 531)<(540 -393))) then v203=v85[v87[2 + 2]];if ( not v203 or ((5934 -(182 + 1421))<(1956 -(87 + 783)))) then InstrPoint=InstrPoint + ((1105 -(459 + 211)) -(157 + 212 + 65));else local v281=811 -(604 + 207);while true do if (((173 + 145 + 3118)==(590 + (4065 -1219))) and (v281==(0 -0))) then v85[v87[1 + 1]]=v203;InstrPoint=v87[1 + 2];break;end end end break;end end break;end end end elseif ((v88<=(87 -51)) or ((13834 -8975)<(4523 -2034))) then if (((9045 -6552)>=(1272 -(505 + 385))) and (v88<=(23 + 10))) then if (((3031 -(14 + 265))>=(3098 -1614)) and (v88==(1019 -(16 + 291 + 680)))) then local v152=242 -(157 + 85);local v153;local v154;while true do if (((1232 + 424)<=(3455 -(891 + 337))) and (v152==(0 -0))) then v153=0 + 0;v154=nil;v152=(871 + 35) -(682 + 223);end if (((3392 + 858)>=(2421 -661)) and (v152==(1326 -(55 + 1270)))) then while true do if ((((3444 -2511) + 1451)<=(12193 -7802)) and (v153==(0 -0))) then v154=v87[291 -(98 + 191)];v85[v154]=v85[v154](v13(v85,v154 + 1,v74));break;end end break;end end else v85[v87[2 + 0]][v85[v87[(1619 -(539 + 195)) -(790 + 92)]]]=v85[v87[1970 -(74 + 847 + 1045)]];end elseif ((457<(2951 -1824)) and (v88<=(228 -(116 + 8 + 70)))) then v85[v87[416 -(308 + 106)]]=v87[7 -4]~=(0 + 0);elseif ((v88==(69 -34)) or (((2921 -2154) + 954)==(2780 -(293 + 82)))) then local v204=936 -(108 + 828);local v205;local v206;local v207;while true do if (((1723 -586)<=(1811 + 1303)) and (v204==(5 -3))) then if (((13851 -10021)>=(1716 + 848)) and (v206>(0 + 0))) then if ((v207<=v85[v205 + 1 + 0]) or ((5288 -((1068 -739) + 823))<=(2917 + 745))) then local v263=0 + 0;local v264;local v265;while true do if (((1905 + 1097)<=(13301 -8675)) and (v263==(0 + 0))) then v264=(0 -0) + 0;v265=nil;v263=1 + 0;end if ((((5928 -1628) -2391)<=(4952 -(3608 -(629 + 768)))) and (v263==(1 + 0))) then while true do if ((v264==(0 + 0)) or ((222 + (4666 -2917))>=(4409 -(1039 + 540)))) then v265=0 + 0;while true do if (((389 -(13 + 376))==v265) or ((2387 + (1066 -458))<(97 + 878 + (1207 -(35 + 79))))) then v73=v87[5 -2];v85[v205 + 2 + 1]=v207;break;end end break;end end break;end end end elseif ((v207>=v85[v205 + (2 -1)]) or ((1542 -(335 + 893))>558)) then local v266=1483 -(356 + 1127);local v267;local v268;while true do if ((v266==((4 -3) + 0)) or ((3866 -1804)<(3258 -1829))) then while true do if (((36 + 290)<=(5032 -((1728 -(497 + 1167)) + 449))) and (v267==(1533 -(290 + 1243)))) then v268=222 -(64 + 158);while true do if ((v268==(0 + 0)) or ((1364 + 742)<=(3143 -(463 + 1242)))) then v73=v87[1318 -(709 + 606)];v85[v205 + ((11 -5) -3)]=v207;break;end end break;end end break;end if (((0 + 0)==v266) or (((1812 + 6488) -6397)>=((6803 -(1231 + 694)) -(79 + 40 + 4)))) then v267=0 + 0;v268=nil;v266=1 -0;end end end break;end if ((((4562 -(285 + 160)) + 57)==(5767 -1593)) and (v204==(883 -(555 + 327)))) then local v226=0 -(0 + 0);while true do if ((((1523 -945) + (681 -(241 + 31)))<4047) and (v226==(0 + 0))) then v207=v85[v205] + v206;v85[v205]=v207;v226=1 + 0;end if (((2141 -(507 + 638))==996) and (v226==(97 -(19 + 77)))) then v204=4 -2;break;end end end if ((v204==(62 -(45 + 17))) or ((5066 -(202 + 564))<(7095 -3544))) then local v227=0 + 0;while true do if (((4901 -3333)>(60 + 305)) and (v227==(677 -(313 + 363)))) then v204=3 -2;break;end if (((669 + 2474)>=(1818 -(1380 + 211))) and (v227==(1157 -(264 + 893)))) then v205=v87[(3 -1) + 0];v206=v85[v205 + (7 -5) + 0];v227=1278 -(797 + 480);end end end end else local v208=0 + 0;local v209;local v210;while true do if ((v208==((570 -(54 + 515)) + 0)) or ((1756 + 496)<(445 -89))) then v85[v209 + 1 + 0]=v210;v85[v209]=v210[v85[v87[1022 -(553 + 465)]]];break;end if (((0 + 0)==v208) or ((1165 -446)>((12354 -8094) -2771))) then v209=v87[7 -5];v210=v85[v87[1160 -(262 + 895)]];v208=3 -2;end end end elseif (((1274 -(154 + 893 + 12))<(2030 + 503)) and (v88<=(111 -72))) then if (((2217 -(435 + 206))<(2959 + 1075)) and (v88<=(123 -86))) then v85[v87[8 -6]]=v37[v87[8 -5]];elseif (((3432 -(641 + (1871 -(763 + 874))))<(5090 -(184 + 147))) and (v88>(26 + 12))) then v85[v87[1 + (2 -1)]]=v85[v87[6 -3]];elseif ((v85[v87[(5 + 0) -3]]==v87[992 -(664 + 324)]) or ((6 + 334)>(3515 + 1107))) then v73=v73 + (2 -1);else v73=v87[1373 -(229 + 1141)];end elseif ((v88<=(68 -28)) or ((4474 -(185 + 507))<(14694 -11388))) then local v158=0;local v159;local v160;local v161;while true do if (((6503 -4171)==2332) and (v158==(1 + 0))) then v161=nil;while true do if ((v159==(1 + 0)) or ((625 + 734)>=(15386 -(946 + 9621)))) then while true do if (((480 -(148 + 138))<(20753 -16409)) and (v160==(285 -(148 + 137)))) then v161=v87[437 -(239 + 196)];v85[v161](v13(v85,v161 + (1 -0),v87[12 -9]));break;end end break;end if (((6199 -3407)<=((36453 -24264) -7611)) and (v159==(0 + 0 + 0))) then v160=0;v161=nil;v159=2 -1;end end break;end if (((20728 -16195)==(11108 -6575)) and (v158==0)) then v159=0;v160=nil;v158=1 + 0;end end elseif ((v88==41) or ((1499 -(23 + 2))==(449 + 812))) then local v212=1862 -(1374 + 488);local v213;local v214;local v215;while true do if (((7886 -3067)==4819) and (v212==(759 -(441 + 317)))) then v215=nil;while true do if (((1 -(0 + 0))==v213) or ((959 + 2433)<(4423 -(961 + 956)))) then while true do if ((v214==(1438 -(826 + 612))) or ((4436 + 307)<(5024 -(410 + 160)))) then v215=v87[1 + 1];v85[v215](v85[v215 + (2 -1)]);break;end end break;end if ((v213==(0 + 0)) or ((1244 -(121 + 39))<(175 + (1493 -(1076 + 230))))) then local v245=0 + 0 + 0;while true do if (((15164 -10432)>(4538 -((2616 -1370) + 301))) and (v245==(0 + 0))) then v214=0 -0;v215=nil;v245=128 -(54 + 73);end if ((v245==(1 -0)) or ((880 + 3611)<(181 + 271))) then v213=1891 -(1033 + 857);break;end end end end break;end if ((v212==(0 -0)) or ((5412 -(696 + 106))<=(5960 -4432))) then v213=0 + 0;v214=nil;v212=1 + 0;end end else v85[v87[7 -5]]=v85[v87[3]] + v87[17 -13];end v73=v73 + (1390 -(848 + 541));break;end end break;end end end end A,B=v28(v11(v77));if  not A[1] then local v89=v36[4][v73] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v30(v29(),{},v17)();end if (v18==6) then v29=nil;function v29()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v56==(507 -(257 + 249))) then v59=nil;v60=nil;v56=2;end if (v56==2) then v61=nil;v62=nil;v56=3;end if (v56~=(0 + 0)) then else v57=0 -0;v58=nil;v56=1378 -(31 + 1346);end if (v56==3) then v63=nil;while true do local v71=0 -0;while true do if (v71~=1) then else if (v57==2) then local v94=0;while true do if (v94==(0 -0)) then for v100=1,v62 do local v101=205 -(84 + 121);local v102;local v103;local v104;local v105;while true do if (v101~=(6 -4)) then else while true do if (v102~=0) then else v103=1958 -(114 + 1844);v104=nil;v102=109 -(77 + 31);end if (v102==1) then v105=nil;while true do if (v103~=(0 + 0)) then else local v118=0;local v119;while true do if (v118~=0) then else v119=864 -(271 + 593);while true do if (1==v119) then v103=1278 -(412 + 865);break;end if (v119~=0) then else local v223=0 -0;while true do if (v223~=(2 -1)) then else v119=1683 -(359 + 1323);break;end if (0==v223) then v104=v22();v105=nil;v223=1;end end end end break;end end end if (v103~=(2 -1)) then else if (v104==1) then v105=v22()~=(0 + 0);elseif (v104==2) then v105=v25();elseif (v104==3) then v105=v26();end v63[v100]=v105;break;end end break;end end break;end if (v101~=0) then else v102=0 -0;v103=nil;v101=1;end if ((2 -1)==v101) then v104=nil;v105=nil;v101=169 -(11 + 156);end end end v61[3]=v22();v94=1;end if (v94~=(304 -(253 + 50))) then else for v106=370 -(191 + 178),v24() do local v107=1408 -(627 + 781);local v108;local v109;local v110;local v111;while true do if (v107~=(0 + 0)) then else v108=856 -(251 + 605);v109=nil;v107=1 + 0;end if (v107==(534 -(261 + 271))) then while true do if (v108==(0 + 0)) then local v117=0;while true do if (v117==0) then v109=0;v110=nil;v117=1 + 0;end if (v117==(1 + 0)) then v108=1;break;end end end if (v108==(926 -(663 + 262))) then v111=nil;while true do if (0==v109) then v110=0;v111=nil;v109=1;end if (v109~=(1531 -(439 + 1091))) then else while true do if (0==v110) then v111=v22();if (v21(v111,971 -(827 + 143),1)~=(0 + 0)) then else local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==(6 -4)) then while true do if (3==v219) then if (v21(v221,221 -(110 + 108),3)==1) then v222[4]=v63[v222[125 -(30 + 91)]];end v58[v106]=v222;break;end if (v219==2) then if (v21(v221,1,1518 -(227 + 1290))==(1138 -(561 + 576))) then v222[2 + 0]=v63[v222[4 -2]];end if (v21(v221,2 -0,1 + 1)==1) then v222[910 -(333 + 574)]=v63[v222[3]];end v219=3;end if (v219==(2 -1)) then local v270=0;while true do if (v270==0) then v222={v23(),v23(),nil,nil};if (v220==(0 + 0)) then local v294=0;local v295;local v296;while true do if (v294==0) then v295=0;v296=nil;v294=1;end if (v294~=(1 + 0)) then else while true do if (v295==0) then v296=0 -0;while true do if (v296~=0) then else v222[3]=v23();v222[4 + 0]=v23();break;end end break;end end break;end end elseif (v220==(1992 -(1242 + 749))) then v222[3 + 0]=v24();elseif (v220==(1 + 1)) then v222[3]=v24() -(2^(1129 -(1011 + 102)));elseif (v220==(689 -(493 + 193))) then local v331=898 -(305 + 593);local v332;local v333;while true do if (v331==1) then while true do if (v332==0) then v333=0;while true do if (v333~=(1186 -(345 + 841))) then else v222[3]=v24() -((783 -(267 + 514))^16);v222[18 -14]=v23();break;end end break;end end break;end if (v331~=(815 -(765 + 50))) then else v332=0;v333=nil;v331=915 -(878 + 36);end end end v270=2 -1;end if (v270==1) then v219=1 + 1;break;end end end if (0~=v219) then else v220=v21(v111,2 -0,3);v221=v21(v111,4,16 -10);v219=1;end end break;end if (v218==0) then v219=99 -(88 + 11);v220=nil;v218=1 + 0;end if (v218==(1 + 0)) then v221=nil;v222=nil;v218=772 -(156 + 614);end end end break;end end break;end end break;end end break;end if (v107~=1) then else v110=nil;v111=nil;v107=1 + 1;end end end v57=1050 -(321 + 726);break;end end end if (3~=v57) then else local v95=0 + 0;while true do if (v95==(0 -0)) then for v112=1,v24() do v59[v112-1]=v29();end for v114=1 -0,v24() do v60[v114]=v24();end v95=1;end if ((1 + 0)==v95) then return v61;end end end break;end if (v71==0) then local v90=0;while true do if (v90==(1654 -(1439 + 214))) then v71=1;break;end if (0==v90) then if (v57==0) then v58={};v59={};v60={};v57=2 -1;end if (v57==1) then local v99=0;while true do if (v99==0) then local v116=0;while true do if (v116~=0) then else v61={v58,v59,nil,v60};v62=v24();v116=1;end if (v116==(1 + 0)) then v99=1726 -(1533 + 192);break;end end end if (v99==(1 + 0)) then v63={};v57=2;break;end end end v90=1 -0;end end end end end break;end end end v30=nil;v18=7;end end end v0=4;end end end